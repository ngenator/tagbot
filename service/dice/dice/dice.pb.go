// Code generated by protoc-gen-go. DO NOT EDIT.
// source: dice.proto

/*
Package dice is a generated protocol buffer package.

It is generated from these files:
	dice.proto

It has these top-level messages:
	Dice
	Result
*/
package dice

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Dice struct {
	Rolls int32 `protobuf:"varint,1,opt,name=rolls" json:"rolls,omitempty"`
	Sides int32 `protobuf:"varint,2,opt,name=sides" json:"sides,omitempty"`
}

func (m *Dice) Reset()                    { *m = Dice{} }
func (m *Dice) String() string            { return proto.CompactTextString(m) }
func (*Dice) ProtoMessage()               {}
func (*Dice) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Dice) GetRolls() int32 {
	if m != nil {
		return m.Rolls
	}
	return 0
}

func (m *Dice) GetSides() int32 {
	if m != nil {
		return m.Sides
	}
	return 0
}

type Result struct {
	Roll   int32 `protobuf:"varint,1,opt,name=roll" json:"roll,omitempty"`
	Result int32 `protobuf:"varint,2,opt,name=result" json:"result,omitempty"`
}

func (m *Result) Reset()                    { *m = Result{} }
func (m *Result) String() string            { return proto.CompactTextString(m) }
func (*Result) ProtoMessage()               {}
func (*Result) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Result) GetRoll() int32 {
	if m != nil {
		return m.Roll
	}
	return 0
}

func (m *Result) GetResult() int32 {
	if m != nil {
		return m.Result
	}
	return 0
}

func init() {
	proto.RegisterType((*Dice)(nil), "dice.Dice")
	proto.RegisterType((*Result)(nil), "dice.Result")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Roller service

type RollerClient interface {
	Roll(ctx context.Context, in *Dice, opts ...grpc.CallOption) (Roller_RollClient, error)
}

type rollerClient struct {
	cc *grpc.ClientConn
}

func NewRollerClient(cc *grpc.ClientConn) RollerClient {
	return &rollerClient{cc}
}

func (c *rollerClient) Roll(ctx context.Context, in *Dice, opts ...grpc.CallOption) (Roller_RollClient, error) {
	stream, err := grpc.NewClientStream(ctx, &_Roller_serviceDesc.Streams[0], c.cc, "/dice.Roller/Roll", opts...)
	if err != nil {
		return nil, err
	}
	x := &rollerRollClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Roller_RollClient interface {
	Recv() (*Result, error)
	grpc.ClientStream
}

type rollerRollClient struct {
	grpc.ClientStream
}

func (x *rollerRollClient) Recv() (*Result, error) {
	m := new(Result)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// Server API for Roller service

type RollerServer interface {
	Roll(*Dice, Roller_RollServer) error
}

func RegisterRollerServer(s *grpc.Server, srv RollerServer) {
	s.RegisterService(&_Roller_serviceDesc, srv)
}

func _Roller_Roll_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(Dice)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(RollerServer).Roll(m, &rollerRollServer{stream})
}

type Roller_RollServer interface {
	Send(*Result) error
	grpc.ServerStream
}

type rollerRollServer struct {
	grpc.ServerStream
}

func (x *rollerRollServer) Send(m *Result) error {
	return x.ServerStream.SendMsg(m)
}

var _Roller_serviceDesc = grpc.ServiceDesc{
	ServiceName: "dice.Roller",
	HandlerType: (*RollerServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Roll",
			Handler:       _Roller_Roll_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "dice.proto",
}

func init() { proto.RegisterFile("dice.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 147 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x4a, 0xc9, 0x4c, 0x4e,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0x8c, 0xb8, 0x58, 0x5c, 0x32,
	0x93, 0x53, 0x85, 0x44, 0xb8, 0x58, 0x8b, 0xf2, 0x73, 0x72, 0x8a, 0x25, 0x18, 0x15, 0x18, 0x35,
	0x58, 0x83, 0x20, 0x1c, 0x90, 0x68, 0x71, 0x66, 0x4a, 0x6a, 0xb1, 0x04, 0x13, 0x44, 0x14, 0xcc,
	0x51, 0x32, 0xe1, 0x62, 0x0b, 0x4a, 0x2d, 0x2e, 0xcd, 0x29, 0x11, 0x12, 0xe2, 0x62, 0x01, 0x29,
	0x84, 0x6a, 0x02, 0xb3, 0x85, 0xc4, 0xb8, 0xd8, 0x8a, 0xc0, 0xb2, 0x50, 0x4d, 0x50, 0x9e, 0x91,
	0x1e, 0x17, 0x5b, 0x50, 0x7e, 0x4e, 0x4e, 0x6a, 0x91, 0x90, 0x0a, 0x17, 0x0b, 0x88, 0x25, 0xc4,
	0xa5, 0x07, 0x76, 0x0e, 0xc8, 0x7e, 0x29, 0x1e, 0x08, 0x1b, 0x62, 0xae, 0x12, 0x83, 0x01, 0x63,
	0x12, 0x1b, 0xd8, 0x99, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x4a, 0x6a, 0x25, 0x24, 0xb4,
	0x00, 0x00, 0x00,
}
